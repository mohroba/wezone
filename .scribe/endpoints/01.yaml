name: Auth
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/otp/send
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      mobile:
        name: mobile
        description: 'The mobile number to send the OTP to. Must contain 10 to 15 digits.'
        required: true
        example: '"989123456789"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      mobile: '"989123456789"'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "OTP has been sent successfully.",
            "data": {
              "expires_in": 120
            },
            "meta": {}
          }
        headers: []
        description: 'OTP created'
        custom: []
      -
        status: 429
        content: |-
          {
            "success": false,
            "message": "Please wait before requesting another OTP.",
            "errors": {
              "retry_after": 75
            },
            "data": null
          }
        headers: []
        description: 'Too many attempts'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/otp/verify
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      mobile:
        name: mobile
        description: 'The mobile number the OTP was sent to. Must contain 10 to 15 digits.'
        required: true
        example: '"989123456789"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      otp:
        name: otp
        description: 'The six-digit one-time password received by the user.'
        required: true
        example: '"123456"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      username:
        name: username
        description: 'optional A unique username to assign to the user.'
        required: false
        example: '""'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      email:
        name: email
        description: 'optional An email address to associate with the user.'
        required: false
        example: '""'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      first_name:
        name: first_name
        description: "optional User's given name."
        required: false
        example: '""'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      last_name:
        name: last_name
        description: "optional User's family name."
        required: false
        example: '""'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      birth_date:
        name: birth_date
        description: 'optional Date of birth in Y-m-d format.'
        required: false
        example: '""'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      national_id:
        name: national_id
        description: 'optional National identification number.'
        required: false
        example: '""'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      residence_city_id:
        name: residence_city_id
        description: 'optional Identifier of the city where the user resides.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      residence_province_id:
        name: residence_province_id
        description: 'optional Identifier of the province where the user resides.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      mobile: '"989123456789"'
      otp: '"123456"'
      username: '""'
      email: '""'
      first_name: '""'
      last_name: '""'
      birth_date: '""'
      national_id: '""'
      residence_city_id: 10
      residence_province_id: 2
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Authenticated successfully.",
            "data": {
              "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...",
              "refresh_token": "f4b5c29f92f24f3b9e0a2d874e6c8f74b1e9f9e2a6f84715b22d8fca8f4b90de",
              "token_type": "Bearer",
              "expires_in": 31536000,
              "expires_at": "2025-09-25 07:10:00",
              "profile": {
                "id": 12,
                "first_name": "Sara",
                "last_name": "Rahimi",
                "full_name": "Sara Rahimi",
                "birth_date": "1994-03-18",
                "national_id": "1234567890",
                "residence_city_id": 10,
                "residence_province_id": 2,
                "user": {
                  "id": 45,
                  "mobile": "989123456789",
                  "username": "sara94",
                  "email": "sara@example.com",
                  "roles": [
                    "customer"
                  ],
                  "permissions": []
                },
                "media": {
                  "national_id_document": "https://cdn.example.com/media/national-id.pdf",
                  "profile_images": [
                    {
                      "id": "f17c6ae4-5c1a-4c44-a058-9324c4b6f8b9",
                      "name": "avatar",
                      "url": "https://cdn.example.com/media/avatar.jpg"
                    }
                  ]
                },
                "created_at": "2025-09-24T12:00:00.000000Z",
                "updated_at": "2025-09-25T07:00:00.000000Z"
              }
            },
            "meta": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Invalid or expired OTP.",
            "errors": {},
            "data": null
          }
        headers: []
        description: 'Invalid OTP'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/profile
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Profile retrieved successfully.",
            "data": {
              "profile": {
                "id": 12,
                "first_name": "Sara",
                "last_name": "Rahimi",
                "full_name": "Sara Rahimi",
                "birth_date": "1994-03-18",
                "national_id": "1234567890",
                "residence_city_id": 10,
                "residence_province_id": 2,
                "user": {
                  "id": 45,
                  "mobile": "989123456789",
                  "username": "sara94",
                  "email": "sara@example.com",
                  "roles": [
                    "customer"
                  ],
                  "permissions": []
                },
                "media": {
                  "national_id_document": "https://cdn.example.com/media/national-id.pdf",
                  "profile_images": [
                    {
                      "id": "f17c6ae4-5c1a-4c44-a058-9324c4b6f8b9",
                      "name": "avatar",
                      "url": "https://cdn.example.com/media/avatar.jpg"
                    }
                  ]
                },
                "created_at": "2025-09-24T12:00:00.000000Z",
                "updated_at": "2025-09-25T07:00:00.000000Z"
              }
            },
            "meta": {}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/profile
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: "optional User's given name."
        required: false
        example: '""'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      last_name:
        name: last_name
        description: "optional User's family name."
        required: false
        example: '""'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      birth_date:
        name: birth_date
        description: 'optional Date of birth in Y-m-d format.'
        required: false
        example: '""'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      national_id:
        name: national_id
        description: 'optional National identification number.'
        required: false
        example: '""'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      residence_city_id:
        name: residence_city_id
        description: 'optional Identifier of the city where the user resides.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      residence_province_id:
        name: residence_province_id
        description: 'optional Identifier of the province where the user resides.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      profile_image:
        name: profile_image
        description: 'optional Profile image file (JPEG, PNG, BMP, GIF, SVG, or WebP).'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      first_name: '""'
      last_name: '""'
      birth_date: '""'
      national_id: '""'
      residence_city_id: 10
      residence_province_id: 2
    fileParameters:
      profile_image: null
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Profile updated successfully.",
            "data": {
              "profile": {
                "id": 12,
                "first_name": "Sara",
                "last_name": "Rahimi",
                "full_name": "Sara Rahimi",
                "birth_date": "1994-03-18",
                "national_id": "1234567890",
                "residence_city_id": 10,
                "residence_province_id": 2,
                "user": {
                  "id": 45,
                  "mobile": "989123456789",
                  "username": "sara94",
                  "email": "sara@example.com",
                  "roles": [
                    "customer"
                  ],
                  "permissions": []
                },
                "media": {
                  "national_id_document": "https://cdn.example.com/media/national-id.pdf",
                  "profile_images": [
                    {
                      "id": "f17c6ae4-5c1a-4c44-a058-9324c4b6f8b9",
                      "name": "avatar",
                      "url": "https://cdn.example.com/media/avatar.jpg"
                    }
                  ]
                },
                "created_at": "2025-09-24T12:00:00.000000Z",
                "updated_at": "2025-09-25T07:05:00.000000Z"
              }
            },
            "meta": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "The given data was invalid.",
            "errors": {
              "birth_date": [
                "The birth date is not a valid date."
              ]
            },
            "data": null
          }
        headers: []
        description: 'Validation error'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/user
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "User retrieved successfully.",
            "data": {
              "user": {
                "id": 45,
                "mobile": "989123456789",
                "username": "sara94",
                "email": "sara@example.com",
                "roles": [
                  "customer"
                ],
                "permissions": [],
                "created_at": "2025-09-24T12:00:00.000000Z",
                "updated_at": "2025-09-25T07:00:00.000000Z"
              }
            },
            "meta": {}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/user
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'optional A unique username between 1 and 191 characters.'
        required: false
        example: '""'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      email:
        name: email
        description: 'optional A unique, valid email address.'
        required: false
        example: '""'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      username: '""'
      email: '""'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "User updated successfully.",
            "data": {
              "user": {
                "id": 45,
                "mobile": "989123456789",
                "username": "sara94",
                "email": "sara@example.com",
                "roles": [
                  "customer"
                ],
                "permissions": [],
                "created_at": "2025-09-24T12:00:00.000000Z",
                "updated_at": "2025-09-25T07:10:00.000000Z"
              }
            },
            "meta": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "The given data was invalid.",
            "errors": {
              "username": [
                "The username has already been taken."
              ]
            },
            "data": null
          }
        headers: []
        description: 'Validation error'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []

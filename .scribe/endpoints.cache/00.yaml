## Autogenerated by Scribe. DO NOT MODIFY.

name: Geography
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/geography/countries
    metadata:
      groupName: Geography
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List countries'
      description: 'Returns a paginated list of countries.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      id:
        name: id
        description: 'optional Filter by country ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'optional Filter by country name (fa/en, partial match).'
        required: false
        example: '""'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name_en:
        name: name_en
        description: 'optional Filter by English name (partial match).'
        required: false
        example: '""'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      capital_city:
        name: capital_city
        description: 'optional Filter by capital city ID.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'optional Results per page (1-100). Defaults to 50.'
        required: false
        example: 25
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      id: 1
      name: '""'
      name_en: '""'
      capital_city: 10
      per_page: 25
    bodyParameters:
      id:
        name: id
        description: 'Must be at least 1.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name_en:
        name: name_en
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      capital_city:
        name: capital_city
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      id: 16
      name: architecto
      name_en: architecto
      capital_city: 22
      per_page: 7
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/geography/countries/{country_id}'
    metadata:
      groupName: Geography
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a country'
      description: 'Return details for a single country, including its capital and provinces.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      country_id:
        name: country_id
        description: 'The ID of the country.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      country:
        name: country
        description: 'The ID of the country.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      country_id: 16
      country: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/geography/provinces
    metadata:
      groupName: Geography
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List provinces'
      description: 'Returns a paginated list of provinces.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      id:
        name: id
        description: 'optional Filter by province ID.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'optional Filter by province name (fa/en, partial match).'
        required: false
        example: '""'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name_en:
        name: name_en
        description: 'optional Filter by English name (partial match).'
        required: false
        example: '""'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      country_id:
        name: country_id
        description: 'optional Filter by country ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'optional Results per page (1-100). Defaults to 50.'
        required: false
        example: 25
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      id: 2
      name: '""'
      name_en: '""'
      country_id: 1
      per_page: 25
    bodyParameters:
      id:
        name: id
        description: 'Must be at least 1.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name_en:
        name: name_en
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      country_id:
        name: country_id
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      id: 16
      name: architecto
      name_en: architecto
      country_id: 22
      per_page: 7
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/geography/provinces/{province_id}'
    metadata:
      groupName: Geography
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a province'
      description: 'Return details for a single province, including its country and cities.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      province_id:
        name: province_id
        description: 'The ID of the province.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      province:
        name: province
        description: 'The ID of the province.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      province_id: 16
      province: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/geography/provinces/{province_id}/cities'
    metadata:
      groupName: Geography
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "List a province's cities"
      description: 'Returns the cities that belong to the given province.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      province_id:
        name: province_id
        description: 'The ID of the province.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      province:
        name: province
        description: 'The ID of the province.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      province_id: 16
      province: 2
    queryParameters:
      per_page:
        name: per_page
        description: 'optional Results per page (1-100). Defaults to 50.'
        required: false
        example: 25
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      per_page: 25
    bodyParameters:
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      per_page: 1
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/geography/cities
    metadata:
      groupName: Geography
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List cities'
      description: 'Returns a paginated list of cities.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      id:
        name: id
        description: 'optional Filter by city ID.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'optional Filter by city name (fa/en, partial match).'
        required: false
        example: '""'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name_en:
        name: name_en
        description: 'optional Filter by English name (partial match).'
        required: false
        example: '""'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      province_id:
        name: province_id
        description: 'optional Filter by province ID.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      country_id:
        name: country_id
        description: 'optional Filter by country ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      latitude:
        name: latitude
        description: 'optional Filter by exact latitude.'
        required: false
        example: 35.6892
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      longitude:
        name: longitude
        description: 'optional Filter by exact longitude.'
        required: false
        example: 51.389
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'optional Results per page (1-100). Defaults to 50.'
        required: false
        example: 25
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      id: 10
      name: '""'
      name_en: '""'
      province_id: 2
      country_id: 1
      latitude: 35.6892
      longitude: 51.389
      per_page: 25
    bodyParameters:
      id:
        name: id
        description: 'Must be at least 1.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name_en:
        name: name_en
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      province_id:
        name: province_id
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      country_id:
        name: country_id
        description: 'Must be at least 1.'
        required: false
        example: 67
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      latitude:
        name: latitude
        description: ''
        required: false
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      longitude:
        name: longitude
        description: ''
        required: false
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      id: 16
      name: architecto
      name_en: architecto
      province_id: 22
      country_id: 67
      latitude: 4326.41688
      longitude: 4326.41688
      per_page: 17
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/geography/cities/{city_id}'
    metadata:
      groupName: Geography
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a city'
      description: 'Return details for a single city, including its province and country.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      city_id:
        name: city_id
        description: 'The ID of the city.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      city:
        name: city
        description: 'The ID of the city.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      city_id: 16
      city: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/geography/locations/lookup
    metadata:
      groupName: Geography
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Lookup nearby locations'
      description: 'Finds nearby cities and provinces around the given coordinates.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      latitude:
        name: latitude
        description: 'Latitude in degrees (-90 to 90).'
        required: true
        example: 35.6892
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      longitude:
        name: longitude
        description: 'Longitude in degrees (-180 to 180).'
        required: true
        example: 51.389
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      radius_km:
        name: radius_km
        description: 'optional Search radius in kilometers (0-1000). Defaults to 50.'
        required: false
        example: 75.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      city_limit:
        name: city_limit
        description: 'optional Maximum number of cities to return (1-100). Defaults to 10.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      province_limit:
        name: province_limit
        description: 'optional Maximum number of provinces to return (1-100). Defaults to 10.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      latitude: 35.6892
      longitude: 51.389
      radius_km: 75.0
      city_limit: 5
      province_limit: 5
    bodyParameters:
      latitude:
        name: latitude
        description: 'Must be between -90 and 90.'
        required: true
        example: -89
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      longitude:
        name: longitude
        description: 'Must be between -180 and 180.'
        required: true
        example: -179
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      radius_km:
        name: radius_km
        description: 'Must be at least 0. Must not be greater than 1000.'
        required: false
        example: 7
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      city_limit:
        name: city_limit
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      province_limit:
        name: province_limit
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      latitude: -89
      longitude: -179
      radius_km: 7
      city_limit: 16
      province_limit: 17
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/geography/locations/user-city
    metadata:
      groupName: Geography
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Resolve user's city"
      description: 'Finds the nearest city to the given coordinates, within the maximum distance.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      latitude:
        name: latitude
        description: 'Latitude in degrees (-90 to 90).'
        required: true
        example: 35.7
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      longitude:
        name: longitude
        description: 'Longitude in degrees (-180 to 180).'
        required: true
        example: 51.4
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      max_distance_km:
        name: max_distance_km
        description: 'optional Maximum distance in kilometers (0-1000). Defaults to 50.'
        required: false
        example: 30.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      latitude: 35.7
      longitude: 51.4
      max_distance_km: 30.0
    bodyParameters:
      latitude:
        name: latitude
        description: 'Must be between -90 and 90.'
        required: true
        example: -89
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      longitude:
        name: longitude
        description: 'Must be between -180 and 180.'
        required: true
        example: -179
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_distance_km:
        name: max_distance_km
        description: 'Must be at least 0. Must not be greater than 1000.'
        required: false
        example: 7
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      latitude: -89
      longitude: -179
      max_distance_km: 7
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/geography/locations/nearby-cities
    metadata:
      groupName: Geography
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Nearby cities'
      description: 'Returns cities near the given coordinates, ordered by distance.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      latitude:
        name: latitude
        description: 'Latitude in degrees (-90 to 90).'
        required: true
        example: 35.6892
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      longitude:
        name: longitude
        description: 'Longitude in degrees (-180 to 180).'
        required: true
        example: 51.389
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      radius_km:
        name: radius_km
        description: 'optional Search radius in kilometers (0-1000). Defaults to 50.'
        required: false
        example: 100.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'optional Maximum number of cities to return (1-100). Defaults to 10.'
        required: false
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      latitude: 35.6892
      longitude: 51.389
      radius_km: 100.0
      limit: 8
    bodyParameters:
      latitude:
        name: latitude
        description: 'Must be between -90 and 90.'
        required: true
        example: -89
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      longitude:
        name: longitude
        description: 'Must be between -180 and 180.'
        required: true
        example: -179
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      radius_km:
        name: radius_km
        description: 'Must be at least 0. Must not be greater than 1000.'
        required: false
        example: 7
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      latitude: -89
      longitude: -179
      radius_km: 7
      limit: 16
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
